#include "connsh.h"
#include "ctrlcode.h"
#include "kkconv.h"
#include "romkan.h"
#include "skk.h"
#include <stdio.h>

void
Skk::initializeKeymap()
{
  NormalKeymap.DefaultFunc = thru;
  NormalKeymap.Keymap[CTRL_T] = [](auto) { g_skk.toKana(); };

  KanaKeymap.DefaultFunc = romkan::flthru;
  KanaKeymap.Keymap = {
    { CTRL_H, romkan::kanaBS },
    { '!', romkan::iZenAl },
    { ',', romkan::iZenAl },
    { '-', romkan::iZenEx },
    { '.', romkan::iZenAl },
    { '/', kkBegA },
    { ':', romkan::iZenAl },
    { ';', romkan::iZenAl },
    { '?', romkan::iZenAl },
    { 'A', kkBegV },
    { 'B', kkBegC },
    { 'C', kkBegC },
    { 'D', kkBegC },
    { 'E', kkBegV },
    { 'F', kkBegC },
    { 'G', kkBegC },
    { 'H', kkBegC },
    { 'I', kkBegV },
    { 'J', kkBegC },
    { 'K', kkBegC },
    { 'L', [](auto) { g_skk.toZenA(); } },
    { 'M', kkBegC },
    { 'N', kkBegC },
    { 'O', kkBegV },
    { 'P', kkBegC },
    { 'Q', kkBeg },
    { 'R', kkBegC },
    { 'S', kkBegC },
    { 'T', kkBegC },
    { 'U', kkBegV },
    { 'V', kkBegC },
    { 'W', kkBegC },
    { 'X', kkBegC },
    { 'Y', kkBegC },
    { 'Z', kkBegC },
    { '[', romkan::iZenEx },
    { '\\', romkan::inputCode },
    { ']', romkan::iZenEx },
    { 'a', romkan::iKanaV },
    { 'b', romkan::iKanaC },
    { 'c', romkan::iKanaC },
    { 'd', romkan::iKanaC },
    { 'e', romkan::iKanaV },
    { 'f', romkan::iKanaC },
    { 'g', romkan::iKanaC },
    { 'h', romkan::iKanaC },
    { 'i', romkan::iKanaV },
    { 'j', romkan::iKanaC },
    { 'k', romkan::iKanaC },
    { 'l', [](auto) { g_skk.toAsc(); } },
    { 'm', romkan::iKanaC },
    { 'n', romkan::iKanaC },
    { 'o', romkan::iKanaV },
    { 'p', romkan::iKanaC },
    { 'q', romkan::tglK },
    { 'r', romkan::iKanaC },
    { 's', romkan::iKanaC },
    { 't', romkan::iKanaC },
    { 'u', romkan::iKanaV },
    { 'v', romkan::iKanaC },
    { 'w', romkan::iKanaC },
    { 'x', romkan::iKanaC },
    { 'y', romkan::iKanaC },
    { 'z', romkan::iKanaC },
  };

  ZenkakuKeymap.DefaultFunc = thru;
  ZenkakuKeymap.Keymap = {
    { ' ', romkan::iZenAl },  { '!', romkan::iZenAl },  { '"', romkan::iZenAl },
    { '#', romkan::iZenAl },  { '$', romkan::iZenAl },  { '%', romkan::iZenAl },
    { '&', romkan::iZenAl },  { '\'', romkan::iZenAl }, { '(', romkan::iZenAl },
    { ')', romkan::iZenAl },  { '*', romkan::iZenAl },  { '+', romkan::iZenAl },
    { '}', romkan::iZenAl },  { '-', romkan::iZenAl },  { '.', romkan::iZenAl },
    { '/', romkan::iZenAl },  { '0', romkan::iZenAl },  { '1', romkan::iZenAl },
    { '2', romkan::iZenAl },  { '3', romkan::iZenAl },  { '4', romkan::iZenAl },
    { '5', romkan::iZenAl },  { '6', romkan::iZenAl },  { '7', romkan::iZenAl },
    { '8', romkan::iZenAl },  { '9', romkan::iZenAl },  { ':', romkan::iZenAl },
    { ';', romkan::iZenAl },  { '<', romkan::iZenAl },  { '=', romkan::iZenAl },
    { '>', romkan::iZenAl },  { '?', romkan::iZenAl },  { '@', romkan::iZenAl },
    { 'A', romkan::iZenAl },  { 'B', romkan::iZenAl },  { 'C', romkan::iZenAl },
    { 'D', romkan::iZenAl },  { 'E', romkan::iZenAl },  { 'F', romkan::iZenAl },
    { 'G', romkan::iZenAl },  { 'H', romkan::iZenAl },  { 'I', romkan::iZenAl },
    { 'J', romkan::iZenAl },  { 'K', romkan::iZenAl },  { 'L', romkan::iZenAl },
    { 'M', romkan::iZenAl },  { 'N', romkan::iZenAl },  { 'O', romkan::iZenAl },
    { 'P', romkan::iZenAl },  { 'Q', romkan::iZenAl },  { 'R', romkan::iZenAl },
    { 'S', romkan::iZenAl },  { 'T', romkan::iZenAl },  { 'U', romkan::iZenAl },
    { 'V', romkan::iZenAl },  { 'W', romkan::iZenAl },  { 'X', romkan::iZenAl },
    { 'Y', romkan::iZenAl },  { 'Z', romkan::iZenAl },  { '[', romkan::iZenAl },
    { '\\', romkan::iZenAl }, { ']', romkan::iZenAl },  { '^', romkan::iZenAl },
    { '_', romkan::iZenAl },  { '`', romkan::iZenAl },  { 'a', romkan::iZenAl },
    { 'b', romkan::iZenAl },  { 'c', romkan::iZenAl },  { 'd', romkan::iZenAl },
    { 'e', romkan::iZenAl },  { 'f', romkan::iZenAl },  { 'g', romkan::iZenAl },
    { 'h', romkan::iZenAl },  { 'i', romkan::iZenAl },  { 'j', romkan::iZenAl },
    { 'k', romkan::iZenAl },  { 'l', romkan::iZenAl },  { 'm', romkan::iZenAl },
    { 'n', romkan::iZenAl },  { 'o', romkan::iZenAl },  { 'p', romkan::iZenAl },
    { 'q', romkan::iZenAl },  { 'r', romkan::iZenAl },  { 's', romkan::iZenAl },
    { 't', romkan::iZenAl },  { 'u', romkan::iZenAl },  { 'v', romkan::iZenAl },
    { 'w', romkan::iZenAl },  { 'x', romkan::iZenAl },  { 'y', romkan::iZenAl },
    { 'z', romkan::iZenAl },  { '{', romkan::iZenAl },  { '|', romkan::iZenAl },
    { '}', romkan::iZenAl },  { '~', romkan::iZenAl },
  };

  KanjiInputKeymap.DefaultFunc = nulcmd;
  KanjiInputKeymap.Keymap = {
    { CTRL_G, kfCancel }, { CTRL_H, kfBS },    { CTRL_M, kfFixThru },
    { ' ', kkconv },      { '!', kZenAl },     { '"', kfthru },
    { '#', kfthru },      { '$', kfthru },     { '%', kfthru },
    { '^', kfthru },      { '\'', kfthru },    { '(', kfthru },
    { ')', kfthru },      { '*', kfthru },     { '+', kfthru },
    { '}', kZenAl },      { '-', kZenEx },     { '.', kZenAl },
    { '/', kfthru },      { '0', kfthru },     { '1', kfthru },
    { '2', kfthru },      { '3', kfthru },     { '4', kfthru },
    { '5', kfthru },      { '6', kfthru },     { '7', kfthru },
    { '8', kfthru },      { '9', kfthru },     { ':', kZenAl },
    { ';', kZenAl },      { '<', stPrefixCv }, { '=', kfthru },
    { '>', stPrefixCv },  { '?', stPrefixCv }, { '@', kfthru },
    { 'A', kOkuri },      { 'B', kOkuri },     { 'C', kOkuri },
    { 'D', kOkuri },      { 'E', kOkuri },     { 'F', kOkuri },
    { 'G', kOkuri },      { 'H', kOkuri },     { 'I', kOkuri },
    { 'J', kOkuri },      { 'K', kOkuri },     { 'L', kfFixToZenA },
    { 'M', kOkuri },      { 'N', kOkuri },     { 'O', kOkuri },
    { 'P', kOkuri },      { 'Q', nulcmd },     { 'R', kOkuri },
    { 'S', kOkuri },      { 'T', kOkuri },     { 'U', kOkuri },
    { 'V', kOkuri },      { 'W', kOkuri },     { 'X', kOkuri },
    { 'Y', kOkuri },      { 'Z', kOkuri },     { '[', kZenEx },
    { '\\', kfthru },     { ']', kZenEx },     { '^', kfthru },
    { '_', kfthru },      { '`', kfthru },     { 'a', kKanaV },
    { 'b', kKanaC },      { 'c', kKanaC },     { 'd', kKanaC },
    { 'e', kKanaV },      { 'f', kKanaC },     { 'g', kKanaC },
    { 'h', kKanaC },      { 'i', kKanaV },     { 'j', kKanaC },
    { 'k', kKanaC },      { 'l', kfFixToAsc }, { 'm', kKanaC },
    { 'n', kKanaC },      { 'o', kKanaV },     { 'p', kKanaC },
    { 'q', h2kkana },     { 'r', kKanaC },     { 's', kKanaC },
    { 't', kKanaC },      { 'u', kKanaV },     { 'v', kKanaC },
    { 'w', kKanaC },      { 'x', kKanaC },     { 'y', kKanaC },
    { 'z', kKanaC },      { '{', kfthru },     { '|', kfthru },
    { '}', kfthru },      { '~', kfthru },
  };

  OkuriInputKeymap.DefaultFunc = nulcmd;
  OkuriInputKeymap.Keymap = {
    { CTRL_G, cancelOkuri },
    { CTRL_H, okuriBS },
    { CTRL_M, okfFixThru },
    { ' ', okfFix },
    { 'A', okKanaV },
    { 'B', okKanaC },
    { 'C', okKanaC },
    { 'D', okKanaC },
    { 'E', okKanaV },
    { 'F', okKanaC },
    { 'G', okKanaC },
    { 'H', okKanaC },
    { 'I', okKanaV },
    { 'J', okKanaC },
    { 'K', okKanaC },
    { 'L', okfFixToZenA },
    { 'M', okKanaC },
    { 'N', okKanaC },
    { 'O', okKanaV },
    { 'P', okKanaC },
    //
    { 'R', okKanaC },
    { 'S', okKanaC },
    { 'T', okKanaC },
    { 'U', okKanaV },
    { 'V', okKanaC },
    { 'W', okKanaC },
    { 'X', okKanaC },
    { 'Y', okKanaC },
    { 'Z', okKanaC },
    { 'a', okKanaV },
    { 'b', okKanaC },
    { 'c', okKanaC },
    { 'd', okKanaC },
    { 'e', okKanaV },
    { 'f', okKanaC },
    { 'g', okKanaC },
    { 'h', okKanaC },
    { 'i', okKanaV },
    { 'j', okKanaC },
    { 'k', okKanaC },
    { 'l', okfFixToAsc },
    { 'm', okKanaC },
    { 'n', okKanaC },
    { 'o', okKanaV },
    { 'p', okKanaC },
    //
    { 'r', okKanaC },
    { 's', okKanaC },
    { 't', okKanaC },
    { 'u', okKanaV },
    { 'v', okKanaC },
    { 'w', okKanaC },
    { 'x', okKanaC },
    { 'y', okKanaC },
    { 'z', okKanaC },
  };

  KAlphaInputKeymap.DefaultFunc = nulcmd;
  KAlphaInputKeymap.Keymap = {
    { CTRL_G, kfCancel }, { CTRL_H, kaBS }, { ' ', kkconv },  { '!', kalpha },
    { '"', kalpha },      { '#', kalpha },  { '$', kalpha },  { '%', kalpha },
    { '^', kalpha },      { '\'', kalpha }, { '(', kalpha },  { ')', kalpha },
    { '*', kalpha },      { '+', kalpha },  { '}', kalpha },  { '-', kalpha },
    { '.', kalpha },      { '/', kalpha },  { '0', kalpha },  { '1', kalpha },
    { '2', kalpha },      { '3', kalpha },  { '4', kalpha },  { '5', kalpha },
    { '6', kalpha },      { '7', kalpha },  { '8', kalpha },  { '9', kalpha },
    { ':', kalpha },      { ';', kalpha },  { '<', kalpha },  { '=', kalpha },
    { '>', kalpha },      { '?', kalpha },  { '@', kalpha },  { 'A', kalpha },
    { 'B', kalpha },      { 'C', kalpha },  { 'D', kalpha },  { 'E', kalpha },
    { 'F', kalpha },      { 'G', kalpha },  { 'H', kalpha },  { 'I', kalpha },
    { 'J', kalpha },      { 'K', kalpha },  { 'L', kalpha },  { 'M', kalpha },
    { 'N', kalpha },      { 'O', kalpha },  { 'P', kalpha },  { 'Q', kalpha },
    { 'R', kalpha },      { 'S', kalpha },  { 'T', kalpha },  { 'U', kalpha },
    { 'V', kalpha },      { 'W', kalpha },  { 'X', kalpha },  { 'Y', kalpha },
    { 'Z', kalpha },      { '[', kalpha },  { '\\', kalpha }, { ']', kalpha },
    { '^', kalpha },      { '_', kalpha },  { '`', kalpha },  { 'a', kalpha },
    { 'b', kalpha },      { 'c', kalpha },  { 'd', kalpha },  { 'e', kalpha },
    { 'f', kalpha },      { 'g', kalpha },  { 'h', kalpha },  { 'i', kalpha },
    { 'j', kalpha },      { 'k', kalpha },  { 'l', kalpha },  { 'm', kalpha },
    { 'n', kalpha },      { 'o', kalpha },  { 'p', kalpha },  { 'q', kalpha },
    { 'r', kalpha },      { 's', kalpha },  { 't', kalpha },  { 'u', kalpha },
    { 'v', kalpha },      { 'w', kalpha },  { 'x', kalpha },  { 'y', kalpha },
    { 'z', kalpha },      { '{', kalpha },  { '|', kalpha },  { '}', kalpha },
    { DEL_CODE, kalpha },
  };

  SelectionKeymap = { fxthru,
                      {
                        { CTRL_G, cancelSel },
                        { CTRL_T, fixIt },
                        { ' ', nxCand },
                        { 'x', pvCand },
                        { '>', stSuffix },
                        { '?', stSuffix },
                        { '<', stSuffix },
                        { EXTRA_CODE, thruFixItToAsc },
                        { EXTRA_CODE, thruFixItToEsc },
                      } };

  CodeInputKeymap = { nulcmd,
                      {
                        { CTRL_C, [](auto) { g_skk.cancelCode(); } },
                        { CTRL_G, [](auto) { g_skk.cancelCode(); } },
                        { CTRL_J, romkan::enterCode },
                        { CTRL_M, romkan::enterCode },
                        { CTRL_T, [](auto) { g_skk.toKana(); } },
                        { '0', romkan::codein },
                        { '1', romkan::codein },
                        { '2', romkan::codein },
                        { '3', romkan::codein },
                        { '4', romkan::codein },
                        { '5', romkan::codein },
                        { '6', romkan::codein },
                        { '7', romkan::codein },
                        { '8', romkan::codein },
                        { '9', romkan::codein },
                        { 'A', romkan::codein },
                        { 'B', romkan::codein },
                        { 'C', romkan::codein },
                        { 'D', romkan::codein },
                        { 'E', romkan::codein },
                        { 'F', romkan::codein },
                        { 'a', romkan::codein },
                        { 'b', romkan::codein },
                        { 'c', romkan::codein },
                        { 'd', romkan::codein },
                        { 'e', romkan::codein },
                        { 'f', romkan::codein },
                      } };

  _ViEscKeymap = {
    { 'i', thruBack }, { 'I', thruBack }, { 'a', thruBack }, { 'A', thruBack },
    { 'o', thruBack }, { 'O', thruBack }, { 'S', thruBack }, { 's', thruBack },
    { 'R', thruBack }, { 'r', thruBack }, { 'C', thruBack }, { 'c', thruBack },
  };

  _EmacsEscKeymap = {
    { EXTRA_CODE, nulcmd },
  };
}
